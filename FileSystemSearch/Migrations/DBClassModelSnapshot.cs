// <auto-generated />
using FileSystemSearch;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FileSystemSearch.Migrations
{
    [DbContext(typeof(DBClass))]
    partial class DBClassModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("DataItemPatternList", b =>
                {
                    b.Property<long>("DataItemsId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PatternListsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DataItemsId", "PatternListsId");

                    b.HasIndex("PatternListsId");

                    b.ToTable("DataItemPatternList");
                });

            modelBuilder.Entity("FileSystemSearch.DataItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CaseInsensitiveFilename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DataItems");
                });

            modelBuilder.Entity("FileSystemSearch.PatternList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("pattern")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PatternLists");
                });

            modelBuilder.Entity("DataItemPatternList", b =>
                {
                    b.HasOne("FileSystemSearch.DataItem", null)
                        .WithMany()
                        .HasForeignKey("DataItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FileSystemSearch.PatternList", null)
                        .WithMany()
                        .HasForeignKey("PatternListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
